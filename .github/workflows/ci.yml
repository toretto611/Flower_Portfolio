name: Build and Test Portfolio App

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull request to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu as the runner environment

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Python (use the desired version, e.g., Python 3.8)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # Specify the Python version

    # Step 3: Install dependencies from requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Upgrade pip
        pip install -r requirements.txt  # Install dependencies from the requirements file

    # Step 4: Run the tests with pytest
    - name: Run tests with pytest
      run: |
        pytest  # Run pytest to execute the tests
      continue-on-error: false  # If tests fail, the workflow should fail

    # Step 5: Set up Docker (buildx is recommended for multi-platform support)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 6: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t gcr.io/$GCP_PROJECT_ID/flower-portfolio:$GITHUB_SHA .  # Build the Docker image and tag it with the commit SHA

    # Step 7: Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}  # Use Google Cloud service account credentials from secrets

    # Step 8: Push the Docker image to Google Container Registry (GCR)
    - name: Push Docker image to GCR
      run: |
        docker push gcr.io/$GCP_PROJECT_ID/flower-portfolio:$GITHUB_SHA  # Push the Docker image to the Google Container Registry
